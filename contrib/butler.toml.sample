#butlerstart
title = "Butler Configuration"

[globals]
  ## The Config managers are where we define which sections we want to support
  ## for butler configuration management
  config-managers = ["prometheus", "alertmanager"]

  ## Scheduler Interval is how often we try to grab configurations from repo
  ## Default: "300"
  scheduler-interval = "300"

  ## Do we want to exit from butler if there are butler configuration load issues
  ## Default: "false"
  exit-on-config-failure = "false"

  ## Path to status file where butler should store some internal status information
  ## Default: /var/tmp/butler.status
  status-file = "/var/tmp/butler.status"

  ## Whether to enable the http log handler for butler. Some find the apache style logging
  ## helpful, others don't.
  ## Default: "true"
  enable-http-log = "true"

  ## Specify that HTTP protocol and Port for the /metrics and /health-check  
  ## to respond on.
  ##
  ## http-proto can be either "http" or "https". If you specify "https,"
  ## then you must also specify the http-tls-cert and http-tls-key options.
  ## 
  ## http-port can be any port that you want the http server to bind on, but
  ## quotated.
  ## 
  ## The default for http-proto is: "http"
  ## The default for http-port is: "8080"
  ## 
  ## There is no default for http-tls-cert, or http-tls-key, and it must be
  ## specified if http-proto is set to "https"
  ##
  http-proto = "http"
  http-port = "8080"
  http-tls-cert = "/path/to/butler.crt"
  http-tls-key = "/path/to/butler.key"
  

## This is the definition for the prometheus configuration handler
[prometheus]
  repos = ["repo1.domain.com", "repo2.domain.com", "azure-repo"]

  ## !!! IMPORTANT !!! Do you want butler to clean up any NON BUTLER MANAGED files under dest-path?
  ## Butler would prefer to manage all the files under the configuration path. This is so that no
  ## new files get snuck in, which could affect the monitoring of the system.
  ## !!! THIS WILL CAUSE UNANTICIPATED DATA LOSS !!!
  ## Default: false
  clean-files = "true"

  ## These are the mustache substitutions that we'll attempt to make on the merged configuration files
  mustache-subs = ["cluster-cluster-id=cluster01-dev-or1", "endpoint=external", "envvar=env:ENVIRONMENT_VAR"]

  ## Should config caching be used
  enable-cache = "true"

  ## Destination path to install cached configuration files to
  cache-path = "/opt/cache/prometheus"

  ## Destination path to install the managed configuration files to
  dest-path = "/opt/prometheus"

  ## Since there is a primary configuration (merged), and additional configurations (unmerged),
  ## we need a name for the merged configuration file. It will be put under dest-path
  primary-config-name = "prometheus.yml"

  ## When butler is unable to contact the upstream manager, then it moves on
  ## and does not update metrics, or cache, or clean, or anything.
  ## Default: false
  manager-timeout-ok = "false"

  ## These are the definitions for the first repo which is defined for prometheus
  [prometheus.repo1.domain.com]
    ## Method can be file, http, https, or s3. In the future it will support Azure blob
    method = "http"

    ## Path is the URI / Path to the configuration files on the repo
    repo-path = "/butler/configs/prometheus"

    ## This is a list of the primary configuration files which get MERGED together
    primary-config = ["prometheus.yml", "prometheus-other.yml"]

    ## This is a list of additional configuration files which will get thrown onto the filesystem.
    ## If there are duplicates, then the last file will be taken.
    additional-config = ["alerts/commonalerts.yml", "butler/butler.yml"]

    # This to specify the content type of the files that are being downloaded from the repository.
    # If it is `auto`, then butler will attempt to determine the file extension
    # and then apply the below rules.
    #
    # If it is `text`, then butler header and footer checks will happen.
    # If it is `json`, then butler header and footer checks will not happen, but json parsing will.
    # If it is `yaml`, then butler header and footer checks will happen, and yaml will be parsed.
    # Default value: "auto"
    content-type = "auto"

    ## These are repo specific http get options
    [prometheus.repo1.domain.com.http]
      # This value is optional. By default butler will use the repo name as
      # the hostname. If you set the host value, butler will use that host
      # instead
      host = "fqdn.domain.com"
      # These values should be set
      retries = "env:HTTP_RETRIES"
      retry-wait-min = "5"
      retry-wait-max = "10"
      timeout = "10"

  ## This will be processed second (and appended / replaced depending)
  [prometheus.repo2.domain.com]
    ## Method can be file, http, https, or s3. In the future it will support Azure blob
    method = "file"

    ## Path is the URI / Path to the configuration files on the repo
    ## Since we're using the `file` method, then we will unset repo-path.
    repo-path = ""

    ## This is a list of the primary configuration files which get MERGED together
    primary-config = ["prometheus-repo2.yml", "prometheus-repo2-other.yml"]

    ## This is a list of additional configuration files which will get thrown onto the filesystem
    ## If there are duplicates, then the last file will be taken.
    additional-config = ["alerts/tenant.yml", "butler/butler-repo2.yml"]

    ## These are repo specific http get options
    [prometheus.repo2.domain.com.file]
      path = "/butler/configs/prometheus"

  [prometheus.azure-repo]
    ## Method can be file, http, https, or s3. In the future it will support Azure blob
    method = "blob"

    ## Path is the URI / Path to the configuration files on the repo
    ## Since we're using the `blob` method, then we will set this as the container name
    repo-path = "blob-container"

    ## This is a list of the primary configuration files which get MERGED together
    ## Azure blob storage will not allow for any directories here. The files must reside in
    ## the container
    primary-config = ["prometheus-repo2.yml", "prometheus-repo2-other.yml"]

    ## This is a list of additional configuration files which will get thrown onto the filesystem
    ## If there are duplicates, then the last file will be taken.
    ## Azure blob storage will not allow for any directories here. The files must reside in
    ## the container
    additional-config = ["tenant.yml", "butler-repo2.yml"]

    ## These are repo specific http get options
    [prometheus.repo2.domain.com.blob]
      storage-account-name = "blobstorageaccountname"

  ## These are the options for reloading the prometheus config-handler
  [prometheus.reloader]
    method = "http"

    [prometheus.reloader.http]
      host = "env:PROM_RELOADER_HOST"
      port = "9090"
      uri = "/-/reload"
      method = "post"
      payload = "{}"
      content-type = "application/json"
      # retry info and timeouts
      retries = "5"
      retry-wait-min = "5"
      retry-wait-max = "10"
      timeout = "10"

## This is the definition for the alertmanager configuration handler
[alertmanager]
  repos = ["repo3.domain.com", "repo4.domain.com"]

  ## !!! IMPORTANT !!! Do you want butler to clean up any NON BUTLER MANAGED files under dest-path?
  ## Butler would prefer to manage all the files under the configuration path. This is so that no
  ## new files get snuck in, which could affect the monitoring of the system.
  ## !!! THIS WILL CAUSE UNANTICIPATED DATA LOSS !!!
  ## Default: false
  clean-files = "true"

  ## These are the mustache substitutions that we'll attempt to make on the merged configuration files
  mustache-subs = ["cluster-cluster-id=cluster01-dev-or1", "endpoint=external"]

  ## Should config caching be used
  enable-cache = "true"

  ## Destination path to install cached configuration files to
  cache-path = "/opt/cache/alertmanager"

  ## Destination path to install the managed configuration files to
  dest-path = "/opt/alertmanager"

  ## Since there is a primary configuration (merged), and additional configurations (unmerged),
  ## we need a name for the merged configuration file. It will be put under dest-path
  primary-config-name = "alertmanager.yml"

  ## These are the definitions for the first repo which is defined for alertmanager
  [alertmanager.repo3.domain.com]
    ## Method can be file, http, https, or s3. In the future it will support Azure blob
    method = "http"

    ## Path is the URI / Path to the file on the repo
    repo-path = "/butler/configs/alertmanager"

    ## primary alertmanager.yml
    primary-config = ["alertmanager.yml"]

    ## Do not need any additional configuartions for alertmanager!
    #additional-config = ["alerts/butler.yml", "rules/commonrules.yml"]

    ## These are repo specific http get options
    [alertmanager.repo3.domain.com.http]
      retries = "5"
      retry-wait-min = "5"
      retry-wait-max = "10"
      timeout = "10"

  ## This will be processed second (and appended / replaced depending)
  [alertmanager.repo4.domain.com]
    ## Method can be file, http, https, or s3. In the future it will support Azure blob
    method = "http"

    ## Path is the URI / Path to the file on the repo
    repo-path = "/butler/configs/alertmanager"

    ## appended alertmanager.yml
    primary-config = ["alertmanager-2.yml"]

    ## Do not need any additional configuartions for alertmanager!
    #additional-config = ["rules/mode1.yml", "rules/commonrules.yml"]

    ## These are repo specific http get options
    [alertmanager.repo4.domain.com.http]
      retries = "5"
      retry-wait-min = "5"
      retry-wait-max = "10"
      timeout = "10"

  ## These are the options for reloading the alertmanager config-handler
  [alertmanager.reloader]
    method = "http"

    [alertmanager.reloader.http]
      host = "env:AM_RELOADER_HOST"
      port = "9093"
      uri = "/-/reload"
      method = "post"
      payload = "{}"
      content-type = "application/json"
      # retry info and timeouts
      retries = "5"
      retry-wait-min = "5"
      retry-wait-max = "10"
      timeout = "10"
#butlerend
